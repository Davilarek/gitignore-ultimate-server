name: Release

on:
  push:
    tags: [ "*" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            extension: ".exe"
            type: x64

          - name: Windows ARM
            os: windows-latest
            target: aarch64-pc-windows-msvc
            extension: ".exe"
            type: arm

          - name: macOS
            os: macos-latest
            target: x86_64-apple-darwin
            type: x64

          - name: macOS ARM
            os: macos-latest
            target: aarch64-apple-darwin
            type: arm

          - name: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            type: x64

          - name: Linux ARM
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            type: arm

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies if necessary
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Test
        if: matrix.type == 'x64'
        run: cargo test --release --target ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}${{ matrix.extension }}
          path: target/${{ matrix.target }}/release/gitignore_ultimate_server${{ matrix.extension }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        run: |
          version=$(cargo pkgid)
          echo "::set-output name=version::${version##*:}"

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Copy artifacts
        run: |
          mkdir releases
          for file in artifacts/*/*; do
            file=${file#artifacts/}
            folder=${file%%/*}
            cp -v artifacts/$file releases/$folder
          done

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: releases/*
