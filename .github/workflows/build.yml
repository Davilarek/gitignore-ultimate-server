name: Build

on:
  push:
    branches: [ next ]
  pull_request:
    branches: [ next ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Initial tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: cargo test

  build:
    needs: test
    name: Build (${{ matrix.name }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            extension: ".exe"

          - name: Windows ARM
            os: windows-latest
            target: aarch64-pc-windows-msvc
            extension: ".exe"

          - name: macOS
            os: macos-latest
            target: x86_64-apple-darwin

          - name: macOS ARM
            os: macos-latest
            target: aarch64-apple-darwin

          - name: Linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - name: Linux ARM
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies if necessary
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --target ${{ matrix.target }}

      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}${{ matrix.extension }}
          path: target/${{ matrix.target }}/debug/gitignore_ultimate_server${{ matrix.extension }}
